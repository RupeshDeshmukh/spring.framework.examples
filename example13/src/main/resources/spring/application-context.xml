<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- Tells the framework to use annotations-based approach to scan files 
		in the specified packages. Thus we can use the @Controller annotation for 
		the controller class, instead of declaring XML elements. -->
	<mvc:annotation-driven enable-matrix-variables="true" />

	<!-- Tell the framework which packages to be scanned when using annotation-based 
		strategy. -->
	<context:component-scan base-package="net.atos.spring.training.example13" />

	<!-- Convenient subclass of UrlBasedViewResolver that supports InternalResourceView 
		(in effect, Servlets and JSPs) and subclasses such as JstlView and TilesView. 
		You can specify the view class for all views generated by this resolver by 
		using setViewClass(..). See the UrlBasedViewResolver javadocs for details. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		
		<!-- Location of all your JSP's. -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		
		<!-- JSP pages extension. -->
		<property name="suffix" value=".jsp" />
		
		<!-- JSP pages that use the JSP Standard Tag Library. -->
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
	</bean>
</beans>
